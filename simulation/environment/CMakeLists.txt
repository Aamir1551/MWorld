cmake_minimum_required(VERSION 3.10)
project(simulation)
set(CXX_STANDARD 11)

add_executable(simulation simulation.cpp)
add_executable(logic_gates logic_gates.cpp)
add_executable(or_gate_test or_gate_test.cpp)
add_executable(and_gate_test and_gate_test.cpp)
add_executable(not_gate_test not_gate_test.cpp)
add_executable(amplifier amplifier.cpp)

#add_executable(flare_test flare_test.cpp)
#make use of variables so you dont need to include this many libraries at the same time
target_link_libraries(simulation PUBLIC block_renderer linear_alg quaternion cube_renderer utils glad ${glfw} settings  mworld_render_utils camera shader blocks world_handler)
target_link_libraries(logic_gates PUBLIC block_renderer linear_alg quaternion cube_renderer utils glad ${glfw} settings  mworld_render_utils camera shader blocks  world_handler)
target_link_libraries(or_gate_test PUBLIC block_renderer linear_alg quaternion cube_renderer utils glad ${glfw} settings  mworld_render_utils camera shader blocks  world_handler)
target_link_libraries(and_gate_test PUBLIC block_renderer linear_alg quaternion cube_renderer utils glad ${glfw} settings  mworld_render_utils camera shader blocks  world_handler)
target_link_libraries(not_gate_test PUBLIC block_renderer linear_alg quaternion cube_renderer utils glad ${glfw} settings  mworld_render_utils camera shader blocks  world_handler)
target_link_libraries(amplifier PUBLIC block_renderer linear_alg quaternion cube_renderer utils glad ${glfw} settings  mworld_render_utils camera shader blocks  world_handler)
#target_link_libraries(flare_test PUBLIC block_renderer linear_alg quaternion cube_renderer utils glad ${glfw} settings  mworld_render_utils camera shader blocks world_handler)

target_include_directories(simulation PUBLIC "${glfw_include_path}"  "${glm_include_path}" "${CMAKE_CURRENT_SOURCE_DIR}/" )
target_include_directories(logic_gates PUBLIC "${glfw_include_path}"  "${glm_include_path}" "${CMAKE_CURRENT_SOURCE_DIR}/" )
target_include_directories(or_gate_test PUBLIC "${glfw_include_path}"  "${glm_include_path}" "${CMAKE_CURRENT_SOURCE_DIR}/" )
target_include_directories(and_gate_test PUBLIC "${glfw_include_path}"  "${glm_include_path}" "${CMAKE_CURRENT_SOURCE_DIR}/" )
target_include_directories(not_gate_test PUBLIC "${glfw_include_path}"  "${glm_include_path}" "${CMAKE_CURRENT_SOURCE_DIR}/" )
target_include_directories(amplifier PUBLIC "${glfw_include_path}"  "${glm_include_path}" "${CMAKE_CURRENT_SOURCE_DIR}/" )
#target_include_directories(flare_test PUBLIC "${glfw_include_path}"  "${glm_include_path}" "${CMAKE_CURRENT_SOURCE_DIR}/" )
